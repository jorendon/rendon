{"version":3,"sources":["logo_m.png","components/Nav.js","components/TodoForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","className","href","this","props","titulo","cantidad","React","Component","TodoForm","state","handleInput","bind","handleSubmit","e","target","value","name","setState","preventDefault","onAddTodo","onSubmit","type","placeholder","onChange","App","todos","handleAddTodo","todo","index","window","confirm","filter","i","map","key","title","priority","description","responsible","onClick","handleDelete","length","src","logo","alt","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.232a990c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_m.e2bc8e57.png\";","import React from 'react';\n\nclass Nav extends React.Component {\n    render() {\n        return (\n            <div className=\"Nav text-center\">\n                <nav className={'navbar navbar-dark bg-dark'}>\n                    <a href=\"1\" className={'text-white'}>\n                        {this.props.titulo}\n                        <span className={'badge badge-pill badge-light m-2'}>\n                        {this.props.cantidad}\n                        </span>\n                    </a>\n                </nav>\n            </div>\n        );\n    }\n}\n\nexport default Nav;","import React from 'react';\n\nclass TodoForm extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            \"title\": \"\",\n            \"responsible\": \"\",\n            \"description\": \"\",\n            \"priority\": \"low\"\n        }\n        this.handleInput=this.handleInput.bind(this);\n        this.handleSubmit=this.handleSubmit.bind(this);\n\n    }\n\n    handleInput(e){\n        const {value,name}=e.target;\n        this.setState({\n            [name]:value\n        })\n\n\n    }\n    handleSubmit(e){\n        e.preventDefault();\n        this.props.onAddTodo(this.state);\n\n\n\n    }\n\n    render() {\n        return (\n            <div className={'card'} onSubmit={this.handleSubmit}>\n                <form className={'card-body'}>\n                    <div className={'form-group'}>\n                        <input type=\"text\" name=\"title\"\n                               className={'form-control'}\n                               placeholder=\"Titulo\"\n                               onChange={this.handleInput}>\n\n                        </input>\n                    </div>\n                    <div className={'form-group'}>\n                        <input type=\"text\" name=\"responsible\"\n                               className={'form-control'}\n                               placeholder=\"Responsable\"\n                               onChange={this.handleInput}>\n\n                        </input>\n                    </div>\n                    <div className={'form-group'}>\n                        <input type=\"text\" name=\"description\"\n                               className={'form-control'}\n                               placeholder=\"Descripcion\"\n                               onChange={this.handleInput}>\n\n                        </input>\n                    </div>\n                    <div className={'form-group'}>\n                        <select  name=\"priority\"\n                               className={'form-control'}\n                               onChange={this.handleInput}>\n                            <option>low</option>\n                            <option>medium</option>\n                            <option>high</option>\n\n                        </select>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Enviar\n                    </button>\n\n\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default TodoForm;","import React from 'react';\nimport logo from './logo_m.png';\nimport './App.css';\nimport Nav from './components/Nav';\nimport TodoForm from './components/TodoForm';\n\nimport {todos} from './todos.json'\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            todos\n        }\n\n        this.handleAddTodo = this.handleAddTodo.bind(this);\n    }\n\n    handleAddTodo(todo) {\n        this.setState({\n            todos: [...this.state.todos, todo]\n        })\n\n    }\n\n    handleDelete(index) {\n        if(!window.confirm('Â¿Desea eliminar la tarea?'))\n        return;\n        this.setState({\n            todos: this.state.todos.filter((e, i) => {\n                return i!==index;\n\n            })\n        })\n\n    }\n\n\n    render() {\n\n\n        const todos = this.state.todos.map((todo, i) => {\n            return (\n                <div className={'col-md-3'} key={i}>\n                    <div className={'card mt-4'}>\n                        <div className={'card-header'}>\n                            <h3> {todo.title}</h3>\n                            <span className={'badge badge-pill badge-warning ml-2'}>\n                                {todo.priority}\n                            </span>\n                        </div>\n                        <div className={'card-body'}>\n                            <p> {todo.description}</p>\n                            <p>\n                                <mark> {todo.responsible}</mark>\n                            </p>\n                        </div>\n                        <div className={'card-footer'}>\n                            <button className={'btn btn-danger'} onClick={this.handleDelete.bind(this, i)}> Borrar\n                            </button>\n                        </div>\n\n                    </div>\n                </div>\n            )\n\n        });\n        return (\n            <div className=\"App\">\n                <Nav titulo=\"Tareas\" cantidad={this.state.todos.length}/>\n                <div className={'container'}>\n                    <img src={logo} className=\"App-logo mt-4\" alt=\"logo\"/>\n                    <div className={'row mt-4'}>\n                        <div className={'col-md-3'}>\n                            <TodoForm onAddTodo={this.handleAddTodo}/>\n                        </div>\n                        {todos}\n                    </div>\n                </div>\n\n\n            </div>\n        )\n    };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}